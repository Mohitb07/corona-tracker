{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","images/covid2.png"],"names":["module","exports","Info","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","console","log","url","fetchData","country","a","changeableURL","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","countryHandler","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","alt","src","corona","Cards","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.428fd5de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2Yl8w\",\"card\":\"Cards_card__1YjEf\",\"infected\":\"Cards_infected__1TOqe\",\"recovered\":\"Cards_recovered__2P6sJ\",\"deaths\":\"Cards_deaths__1LnvN\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css'\r\nimport cx from 'classnames';\r\n\r\n\r\nconst Info = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n\r\n    if(!confirmed){\r\n        console.log('still loading',confirmed)\r\n        return 'Loading'\r\n    }\r\n\r\n    return (            \r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>    \r\n    )\r\n}\r\n\r\n\r\nexport default Info;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableURL = url;\r\n\r\n    if(country){\r\n        changeableURL = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const {data : {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableURL)\r\n        return {confirmed, recovered, deaths, lastUpdate};   \r\n\r\n    } catch (err) {\r\n        console.log('fetch error')\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const { data }  = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`)\r\n\r\n        return countries.map((country)=>country.name)\r\n\r\n    }catch (err) {\r\n        console.log(err)\r\n    }\r\n}","import React,{useState, useEffect}  from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) =>{\r\n    const  [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchApi = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchApi();\r\n    },[])\r\n\r\n    const  lineChart = (\r\n        dailyData.length ?\r\n        <Line \r\n            data ={{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data:dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }]\r\n            }}\r\n        /> : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n                data={{\r\n                    labels:['Infected', 'Recovered','Deaths'],\r\n                    datasets: [{                    \r\n                        labels:'People',\r\n                        backgroundColor:[\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)',\r\n                        ],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }],\r\n                    }}\r\n                options={{\r\n                    legend: { display:false },\r\n                    title: { display:true, text:`Current state in ${country}`}\r\n                }}\r\n            />\r\n        ): null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { countries, fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({countryHandler}) =>{\r\n    const [fetchedCountries, setFetchedCountries]  = useState([]);\r\n\r\n    useEffect(()=>{\r\n      const fetchAPI = async() => {\r\n          setFetchedCountries(await fetchCountries())\r\n      }  \r\n\r\n      fetchAPI()\r\n    },[setFetchedCountries])\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>countryHandler(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>    \r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './Components'\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api'\r\n\r\nimport corona from './images/covid2.png'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data:{},\r\n        country:''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n        \r\n        console.log('fectched data',data)\r\n        this.setState({data:data})\r\n    }\r\n\r\n    countryHandler = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState(\r\n            { \r\n                data:fetchedData,\r\n                country:country\r\n            }\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        const {data,country} = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} alt='covid 19' src={corona}/>\r\n                <Cards data={data}/>\r\n                <CountryPicker countryHandler={this.countryHandler}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3mvNx\",\"image\":\"App_image__1AYWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3NwVW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1KJQs\"};","module.exports = __webpack_public_path__ + \"static/media/covid2.d7265326.png\";"],"sourceRoot":""}